name: Build for macOS and Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 4: Build the macOS app
      - name: Build macOS app with PyInstaller
        run: |
          rm -rf build dist *.spec
          pyinstaller --onefile --windowed --name TaskManager \
              --add-data "models.py:." \
              --add-data "styles.py:." \
              --add-data "database.py:." \
              --hidden-import sqlite3 ui.py

      # Step 5: Compress the macOS build
      - name: Compress macOS Build
        run: zip -r dist/TaskManager-macOS.zip dist/TaskManager.app

      # Step 6: Upload macOS Build as an Artifact
      - name: Upload macOS Build
        uses: actions/upload-artifact@v3
        with:
          name: TaskManager-macOS
          path: dist/TaskManager-macOS.zip

  build-windows:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 4: Build the Windows executable
      - name: Build Windows executable with PyInstaller
        run: |
          rm -rf build dist *.spec
          pyinstaller --onefile --windowed --name TaskManager \
              --add-data "models.py;." \
              --add-data "styles.py;." \
              --add-data "database.py;." \
              --hidden-import sqlite3 ui.py

      # Step 5: Upload Windows Build as an Artifact
      - name: Upload Windows Build
        uses: actions/upload-artifact@v3
        with:
          name: TaskManager-Windows
          path: dist/TaskManager.exe
